# Generated by Django 3.0.6 on 2020-06-23 18:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AutorLibro',
            fields=[
                ('idAutorLibro', models.AutoField(help_text='ID único para este Autor', primary_key=True, serialize=False)),
                ('nombreAutorLibro', models.CharField(max_length=100, verbose_name='Nombre')),
                ('apellidosAutorLibro', models.CharField(max_length=100, verbose_name='Apellidos')),
                ('descripcionAutorLibro', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Descripcion Breve')),
                ('fechaCreacionAutorLibro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('estadoAutorLibro', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'ordering': ['nombreAutorLibro'],
            },
        ),
        migrations.CreateModel(
            name='Bibliotecario',
            fields=[
                ('idBibliotecario', models.AutoField(help_text='ID único para esta usuario bibliotecario', primary_key=True, serialize=False)),
                ('nombreBibliotecario', models.CharField(help_text='Ingrese sus nombres', max_length=100, verbose_name='Nombre')),
                ('apellidosBibliotecario', models.CharField(help_text='Ingrese  sus apellidos', max_length=100, verbose_name='Apellido')),
                ('direccionBibliotecario', models.CharField(help_text='Incluya Distrito , Provincia y Pais si fuere necesario', max_length=250, verbose_name='Direccion')),
                ('DNIBibliotecario', models.CharField(help_text='8 digitos, incluya el cero adelante si fuese necesario. Especifique cuando no sea DNI', max_length=20, verbose_name='Documento de Identidad')),
                ('telefonoBibliotecario', models.CharField(help_text='Ingresar un numero de celular con su codigo de pais y si es telefono con su codigo respectivo sin guiones o paréntesis', max_length=20, verbose_name='Telefono (Fijo o Movil)')),
                ('emailBibliotecario', models.EmailField(help_text='ejemplo@example.com', max_length=50, verbose_name='Email')),
                ('sexoBibliotecario', models.CharField(blank=True, choices=[('m', 'Masculino'), ('f', 'Femenino')], default='m', help_text='Sexo del usuario del bibliotecario', max_length=1, verbose_name='Sexo')),
                ('usernameBibliotecario', models.CharField(help_text='Evite colocar su mismo nombre', max_length=50, verbose_name='Nombre de usuario')),
                ('claveBibliotecario', models.CharField(help_text='Incluya numeros y letras no menor a 6 caracteres', max_length=50, verbose_name='Clave de usuario')),
                ('fechaNacimientoBibliotecario', models.DateField(verbose_name='Fecha de Nacimiento')),
                ('fechaCreacionBibliotecario', models.DateTimeField(auto_now_add=True, help_text='Fecha de creacion del usuario', verbose_name='Fecha de Creacion')),
                ('estadoBibliotecario', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'ordering': ['nombreBibliotecario'],
            },
        ),
        migrations.CreateModel(
            name='Editorial',
            fields=[
                ('idEditorial', models.AutoField(help_text='ID único para esta publicación', primary_key=True, serialize=False)),
                ('tituloEditorial', models.CharField(max_length=200, verbose_name='Título')),
                ('descripcionEditorial', models.TextField(blank=True, max_length=1000, null=True, verbose_name='Descripcion Breve')),
                ('fechaCreacionEditorial', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('estadoEditorial', models.BooleanField(default=True, verbose_name='Activo')),
            ],
        ),
        migrations.CreateModel(
            name='EtiquetaLibro',
            fields=[
                ('idEtiquetaLibro', models.AutoField(help_text='ID único para esta Tag o etiqueta', primary_key=True, serialize=False)),
                ('tituloEtiquetaLibro', models.CharField(max_length=100, verbose_name='Nombre de la nueva etiqueta')),
                ('fechaCreacionEtiquetaLibro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creacion')),
                ('estadoEtiquetaLibro', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'ordering': ['tituloEtiquetaLibro'],
            },
        ),
        migrations.CreateModel(
            name='GeneroLibro',
            fields=[
                ('idGeneroLibro', models.AutoField(help_text='ID único para esta Género', primary_key=True, serialize=False)),
                ('tituloGeneroLibro', models.CharField(max_length=200, verbose_name='Título')),
                ('fechaCreacionGeneroLibro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('estadoGeneroLibro', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'ordering': ['tituloGeneroLibro'],
            },
        ),
        migrations.CreateModel(
            name='Idioma',
            fields=[
                ('idIdioma', models.AutoField(help_text='ID único para esta Idioma', primary_key=True, serialize=False)),
                ('tituloIdioma', models.CharField(help_text='Ingrese el idioma natural del libro (por ejemplo, inglés, francés, japonés, etc.)', max_length=200, verbose_name='Título')),
                ('estadoIdioma', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'ordering': ['tituloIdioma'],
            },
        ),
        migrations.CreateModel(
            name='Lector',
            fields=[
                ('idLector', models.AutoField(help_text='ID único para este Lector', primary_key=True, serialize=False)),
                ('nombreLector', models.CharField(max_length=100, verbose_name='Nombre')),
                ('apellidosLector', models.CharField(max_length=100, verbose_name='Apellidos')),
                ('DNILector', models.CharField(help_text='8 digitos, incluya el cero adelante si fuese necesario. Especifique cuando no sea DNI', max_length=20, verbose_name='Documento de Identidad')),
                ('emailLector', models.EmailField(max_length=50, verbose_name='Email')),
                ('sexoLector', models.CharField(blank=True, choices=[('m', 'Masculino'), ('f', 'Femenino')], default='m', help_text='Sexo del usuario del Lector', max_length=1, verbose_name='Sexo')),
                ('usernameLector', models.CharField(help_text='Evite colocar su mismo nombre', max_length=50, verbose_name='Nombre de Usuario')),
                ('claveLector', models.CharField(help_text='Incluya numeros y letras no menor a 6 caracteres', max_length=50, verbose_name='Clave de Usuario')),
                ('fechaNacimientoLector', models.DateField(help_text='Formato d-mm-yyyy', verbose_name='Fecha de Nacimiento')),
                ('fechaCreacionLector', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('estadoLector', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'ordering': ['fechaCreacionLector'],
            },
        ),
        migrations.CreateModel(
            name='Libro',
            fields=[
                ('idLibro', models.AutoField(help_text='ID único para este libro', primary_key=True, serialize=False)),
                ('codigoLibro', models.CharField(blank=True, max_length=20, verbose_name='Codigo de Biblioteca')),
                ('tituloLibro', models.CharField(help_text='Ingrese el nombre del género (p. ej. Ciencia Ficción, Poesía Francesa etc.)', max_length=200, verbose_name='Titulo')),
                ('formatoLibro', models.CharField(blank=True, choices=[('e', 'E-book'), ('i', 'Impreso'), ('a', 'E-book e Impreso')], default='e', help_text='Formato de disponibilidad del libro', max_length=1, verbose_name='Formato de Disponibilidad')),
                ('resumenLibro', models.TextField(help_text='Ingrese una breve descripción del libro', max_length=10000, verbose_name='Resumen')),
                ('ISBNLibro', models.CharField(help_text='13 Caracteres <a href="https://www.isbn-international.org/content/what-isbn">ISBN number</a>', max_length=13, verbose_name='ISBN')),
                ('anioPublicacionLibro', models.IntegerField(verbose_name='Año de Publicación')),
                ('fechaCreacionLibro', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('estadoLibro', models.BooleanField(default=True, verbose_name='Activo')),
                ('autorLibro_Libro', models.ManyToManyField(help_text='Seleccione un autor para este libro', to='GestionPrestamo.AutorLibro', verbose_name='Autor')),
                ('bibliotecario_Libro', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='GestionPrestamo.Bibliotecario')),
                ('editorial_Libro', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='GestionPrestamo.Editorial')),
                ('etiquetaLibro_Libro', models.ManyToManyField(help_text='Seleccione los tags para este libro', to='GestionPrestamo.EtiquetaLibro', verbose_name='Tags')),
                ('generoLibro', models.ManyToManyField(help_text='Seleccione un genero para este libro', to='GestionPrestamo.GeneroLibro', verbose_name='Género')),
                ('idiomaLibro', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='GestionPrestamo.Idioma')),
            ],
            options={
                'ordering': ['fechaCreacionLibro'],
            },
        ),
        migrations.CreateModel(
            name='LibroInstancia',
            fields=[
                ('idLibroInstancia', models.AutoField(help_text='ID único para esta publicación', primary_key=True, serialize=False)),
                ('estadoPrestamoLibroInstancia', models.CharField(blank=True, choices=[('m', 'mantenimiento'), ('o', 'En calidad de préstamo'), ('d', 'Disponible'), ('r', 'Reservado')], default='d', help_text='Disponibilidad del libro', max_length=1, verbose_name='Estado de Préstamo')),
                ('fechaCreacionLibroInstancia', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('estadoLibroInstancia', models.BooleanField(default=True, verbose_name='Activo')),
                ('libro_LibroInstancia', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='GestionPrestamo.Libro')),
            ],
            options={
                'ordering': ['libro_LibroInstancia'],
            },
        ),
        migrations.CreateModel(
            name='Pais',
            fields=[
                ('idPais', models.AutoField(help_text='ID único para esta Idioma', primary_key=True, serialize=False)),
                ('tituloPais', models.CharField(help_text='Ingrese el idioma natural del libro (por ejemplo, inglés, francés, japonés, etc.)', max_length=200, verbose_name='Título')),
                ('estadoPais', models.BooleanField(default=True, verbose_name='Activo')),
                ('isoPais', models.CharField(help_text='Código segun la ONU', max_length=2, verbose_name='ISO Alfa-2')),
            ],
            options={
                'ordering': ['tituloPais'],
            },
        ),
        migrations.CreateModel(
            name='TipoUsuario',
            fields=[
                ('idTipoUsuario', models.AutoField(help_text='ID único para esta Tipo de Usuario', primary_key=True, serialize=False)),
                ('nombreTipoUsuario', models.CharField(max_length=100, verbose_name='Nombre')),
                ('fechaCreacionTipoUsuario', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creacion')),
                ('estadoTipoUsuario', models.BooleanField(default=True, verbose_name='Activo')),
            ],
        ),
        migrations.CreateModel(
            name='Reservacion',
            fields=[
                ('idReservacion', models.AutoField(help_text='ID único para esta publicación', primary_key=True, serialize=False)),
                ('tipoAdquisicionReservacion', models.CharField(choices=[('i', 'interno'), ('e', 'externo'), ('a', 'Interbibliotecario')], help_text='Seleccione el tipo de Adquisicion que se realizará', max_length=1, verbose_name='Adquisición')),
                ('fechaEmisionReservacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de emision de la reservación')),
                ('fechaRetornoReservacion', models.DateTimeField(verbose_name='Fecha de retorno de la Reservacion')),
                ('estadoReservacion', models.BooleanField(default=True, verbose_name='Activo')),
                ('bibliotecario_Reservacion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='GestionPrestamo.Bibliotecario')),
                ('lector_Reservacion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='GestionPrestamo.Lector')),
                ('libro_Reservacion', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='GestionPrestamo.LibroInstancia')),
            ],
            options={
                'ordering': ['fechaEmisionReservacion'],
            },
        ),
        migrations.AddField(
            model_name='libro',
            name='paisLibro',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='GestionPrestamo.Pais'),
        ),
        migrations.AddField(
            model_name='lector',
            name='tipoUsuario_Lector',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='GestionPrestamo.TipoUsuario'),
        ),
        migrations.AddField(
            model_name='bibliotecario',
            name='tipoBibliotecario_Bibliotecario',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='GestionPrestamo.TipoUsuario'),
        ),
    ]
